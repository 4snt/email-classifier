from typing import Protocol, List, Optional
from .entities import Email, ClassificationResult

class TextExtractorPort(Protocol):
    def extract(self, raw_bytes: bytes) -> str: ...

class TokenizerPort(Protocol):
    def preprocess(self, text: str) -> str: ...
    def tokenize(self, text: str) -> List[str]: ...

class ClassifierPort(Protocol):
    def classify(self, email: Email, tokens: List[str]) -> ClassificationResult: ...

class ReplySuggesterPort(Protocol):
    def suggest(self, result: ClassificationResult, email: Email) -> str: ...
